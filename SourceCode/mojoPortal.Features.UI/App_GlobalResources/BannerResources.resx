<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="bannerNumberSetting" xml:space="preserve">
    <value>Number of banner display</value>
  </data>
  <data name="bannerWidthSetting" xml:space="preserve">
    <value>Setting width banner rows</value>
  </data>
  <data name="horizontalSetting" xml:space="preserve">
    <value>Setting show banner follow horizontal?</value>
  </data>
  <data name="ImageUrlErrorFileExtension" xml:space="preserve">
    <value>Image don't recognize.</value>
  </data>
  <data name="ImageUrlErrorFileSize" xml:space="preserve">
    <value>Image over size</value>
  </data>
  <data name="lengthwiseSetting" xml:space="preserve">
    <value>Cài đặt banner theo chiều dọc?</value>
  </data>
  <data name="DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EndDateLabel" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="FilePathLabel" xml:space="preserve">
    <value>Image/Flash</value>
  </data>
  <data name="IsFollowLabel" xml:space="preserve">
    <value>Follow?</value>
  </data>
  <data name="IsHorizontalLabel" xml:space="preserve">
    <value>Show banner follow horizontal?</value>
  </data>
  <data name="IsPublicLabel" xml:space="preserve">
    <value>Published?</value>
  </data>
  <data name="IsTargetLabel" xml:space="preserve">
    <value>Target?</value>
  </data>
  <data name="LinkLabel" xml:space="preserve">
    <value>Link (*)</value>
  </data>
  <data name="NameLabel" xml:space="preserve">
    <value>Name of banner (*)</value>
  </data>
  <data name="StartDateLabel" xml:space="preserve">
    <value>Start date (*)</value>
  </data>
  <data name="TypeLabel" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="btnDel" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="btnSubmit" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="CreatedByUserLabel" xml:space="preserve">
    <value>Created by: </value>
  </data>
  <data name="bannerHeightSetting" xml:space="preserve">
    <value>Setting height image/flash</value>
  </data>
  <data name="BannerCurrentImageLabel" xml:space="preserve">
    <value>Current banner</value>
  </data>
  <data name="BannerAddPostLabel" xml:space="preserve">
    <value>Add banner</value>
  </data>
  <data name="HeightSetting" xml:space="preserve">
    <value>Allow setting height of banner?</value>
  </data>
  <data name="SlideTopLabel" xml:space="preserve">
    <value>Đặt làm ảnh chạy slide</value>
  </data>
  <data name="bannerAllowWidthSetting" xml:space="preserve">
    <value>Allow setting width banner</value>
  </data>
  <data name="bannerNumberRowSetting" xml:space="preserve">
    <value>Number of banner in rows</value>
  </data>
  <data name="BannerStatus" xml:space="preserve">
    <value>Choose status</value>
  </data>
  <data name="btnCancel" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BannerModuleConfigSetting" xml:space="preserve">
    <value>Setting module show</value>
  </data>
  <data name="IntergerRequiredLabel" xml:space="preserve">
    <value>Enter integer.</value>
  </data>
  <data name="PriorityLabel" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="DateFailFormatLabel" xml:space="preserve">
    <value>Please enter a valid date.</value>
  </data>
  <data name="LinkHeaderLabel" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="LinkRequiredLabel" xml:space="preserve">
    <value>Link of banner is field required.</value>
  </data>
  <data name="NameHeaderLabel" xml:space="preserve">
    <value>Name of banner</value>
  </data>
  <data name="NameRequiredLabel" xml:space="preserve">
    <value>Name of banner is field required.</value>
  </data>
  <data name="StartDateHeaderLabel" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="StartDateRequiredLabel" xml:space="preserve">
    <value>Start date is field required.</value>
  </data>
  <data name="BannerSlideTopSetting" xml:space="preserve">
    <value>Setting show bxslider</value>
  </data>
  <data name="IsSlideBottomLabel" xml:space="preserve">
    <value>Slide nivoSlider</value>
  </data>
  <data name="IsSlideTopLabel" xml:space="preserve">
    <value>Slide bxSlider</value>
  </data>
  <data name="BannerSlideBottomSetting" xml:space="preserve">
    <value>Setting slide nivoSlider</value>
  </data>
  <data name="BannerMarginSetting" xml:space="preserve">
    <value>Setting margin banner</value>
  </data>
  <data name="BannerSlideSetting" xml:space="preserve">
    <value>Setting banner slide top</value>
  </data>
  <data name="BannerHeightSlideTopSetting" xml:space="preserve">
    <value>Setting image height</value>
  </data>
  <data name="BannerWidthSlideTopSetting" xml:space="preserve">
    <value>Setting image width</value>
  </data>
  <data name="SpeedSlide" xml:space="preserve">
    <value>Speed slide</value>
  </data>
  <data name="TimeChangeImage" xml:space="preserve">
    <value>Time changee image</value>
  </data>
  <data name="ModuleCssCustomeSetting" xml:space="preserve">
    <value>CSS Style set</value>
  </data>
  <data name="NoClickLabel" xml:space="preserve">
    <value>No Click?</value>
  </data>
  <data name="BanneRotatorSliderSetting" xml:space="preserve">
    <value>Thiết lập hiển thị banner kiểu slide Rotator</value>
  </data>
  <data name="BannerSileRotatorGroupSetting" xml:space="preserve">
    <value>Thiết lập hiện thị kiểu banner slide Rotator</value>
  </data>
  <data name="TimeChangeRotatorSetting" xml:space="preserve">
    <value>Thời gian thay đổi hình ảnh</value>
  </data>
  <data name="TimeDisplayRotatorSetting" xml:space="preserve">
    <value>Thời gian hiển thị hình ảnh</value>
  </data>
  <data name="SetupSlider" xml:space="preserve">
    <value>Setup Slider</value>
  </data>
  <data name="SliderSetting" xml:space="preserve">
    <value>Show Slider</value>
  </data>
  <data name="NameSetting" xml:space="preserve">
    <value>Tên của slider</value>
  </data>
  <data name="HeadBannerSetting" xml:space="preserve">
    <value>Title Banner</value>
  </data>
</root>