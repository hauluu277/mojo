
@using Newtonsoft.Json
@using mojoPortal.Web.Areas.GiaoDienArea.Models
@model GiaoDienFormVM
@{
    ViewBag.Title = "Quản lý giao diện";

    var title = "Thêm mới giao diện";

    if (Model.ItemID > 0)
    {
        title = "Cập nhật giao diện";

    }

}
<style>
    .form-group {
        margin-bottom: 10px;
        display: flex;
        align-items: center;
        flex-wrap: wrap;
    }

    #fileList {
        margin-left: 18%;
    }

    .acb {
        width: 50%;
    }

    .acb1 {
        width: -50%;
    }

    #frmReport .col-sm-4 {
        padding-left: 15px;
        padding-right: 15px;
    }

    .ajax-file-upload-filename {
        max-width: 300px;
        text-overflow: ellipsis;
        white-space: nowrap;
        display: inline-block;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
        word-wrap: break-word;
        overflow: hidden;
        margin-right: 20px;
        line-height: 2.8;
    }

    .drop-container {
        position: relative;
        display: flex;
        gap: 10px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 200px;
        padding: 20px;
        border-radius: 10px;
        border: 2px dashed #555;
        color: #444;
        cursor: pointer;
        transition: background .2s ease-in-out, border .2s ease-in-out;
    }

        .drop-container:hover,
        .drop-container.drag-active {
            background: #eee;
            border-color: #111;
        }

            .drop-container:hover .drop-title,
            .drop-container.drag-active .drop-title {
                color: #222;
            }

    .drop-title {
        color: #444;
        font-size: 20px;
        font-weight: bold;
        text-align: center;
        transition: color .2s ease-in-out;
    }

    input[type=file] {
        width: 350px;
        max-width: 100%;
        color: #444;
        padding: 5px;
        background: #fff;
        border-radius: 10px;
        border: 1px solid #555;
    }

        input[type=file]::file-selector-button {
            margin-right: 20px;
            border: none;
            background: #084cdf;
            padding: 10px 20px;
            border-radius: 10px;
            color: #fff;
            cursor: pointer;
            transition: background .2s ease-in-out;
        }

            input[type=file]::file-selector-button:hover {
                background: #0d45a5;
            }

    .error {
        color: red;
    }
</style>
@using (
Ajax.BeginForm("SaveForm", "GiaoDien",
new AjaxOptions { HttpMethod = "POST", OnSuccess = "ccc", OnFailure = "AjaxError" },
new { @class = "", id = "frmReport", @enctype = "multipart/form-data", area = "GiaoDienArea" }))
{
    @Html.HiddenFor(x => x.ItemID)

    <div class="modal-dialog" style="width:1000px;max-width:100%">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@title</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <!-- Modal body -->
            <div class="modal-body">

                <div class="form-horizontal">
                    <h3 class="legend-title">Thông tin giao diện</h3>
                    <div class="form-group">
                        <label class="control-label col-sm-2">Tên giao diện<span class="red">*</span></label>
                        <div class="col-sm-10">
                            @if (Model.ItemID > 0)
                            {
                                @Html.TextBoxFor(x => x.TenGiaoDien, new { @class = "form-control", @readonly = "readonly" })

                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.TenGiaoDien, new { @class = "form-control" })

                            }
                            @Html.ValidationMessageFor(x => x.TenGiaoDien)

                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-2">Mã giao diện<span class="red">*</span></label>

                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.MaGiaoDien, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(x => x.MaGiaoDien)
                        </div>


                    </div>

                    <div class="form-group">
                        <label class="control-label col-sm-2">Folder Zip giao diện</label>
                        <div class="col-sm-10">
                            @*<input type="file" id="filebase" name="filebase" class="form-control" style="width: 100%; height: 100%; float: left; padding: 15px; border: 2px dashed #95afc0" placeholder="Kéo và chọn tài liệu">*@
                            <label for="images" class="drop-container" id="dropcontainer">
                                <span class="drop-title">Kéo, thả giao diện vào đây</span>
                                Hoặc
                                <input type="file" id="images" name="filebase" required>
                            </label>
                        </div>
                        @*<span class="btn btn-danger" onclick="ChooseFileReference()" style="margin-left:10px">
                                <i class="fa fa-plus"></i>&nbsp;Chọn tệp đính kèm
                            </span>*@
                        @if (!string.IsNullOrEmpty(Model.DuongDanZipTaiLen))
                        {
                            <div id="fileList" style="float: right; width: calc(100% - 100px); margin-top: 15px;">
                                <div class="panel panel-danger">
                                    <div class="panel-heading" style="padding: 5px 15px">
                                        Folder nén giao diện
                                    </div>
                                    <div class="panel-body">
                                        <ul id="tblFileList" class="table table-striped">
                                            @if (!string.IsNullOrEmpty(Model.DuongDanZipTaiLen))
                                            {
                                                var listFile = Model.DuongDanZipTaiLen.Split('?');
                                                foreach (var item in listFile)
                                                {
                                                    var url = "/Uploads/" + item;
                                                    <li data-id="@item">
                                                        <div class="div1"><a href="@url" download="@url">@Model.MaGiaoDien</a></div>
                                                        <div class="div2">
                                                            <span style="cursor: pointer;" onclick="removeFileAtachment('@item')" title="Xóa tệp đính kèm"><i class="fa fa-times" aria-hidden="true"></i></span>
                                                        </div>
                                                    </li>
                                                }

                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                </div>

            </div>
            <div class="modal-footer center boder-box">
                @Html.HiddenFor(x => x.DuongDan)
                <button type="button" onclick="SubmitForm()" class="btn btn-primary">Hoàn thành</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    <i class="fa fa-sign-out" aria-hidden="true"></i> <span>Đóng</span>
                </button>
            </div>
        </div>
    </div>
}
<script src="~/Scripts/jquery/jquery.validate.min.js"></script>
@*<script src="~/Scripts/jquery/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery/jquery.unobtrusive-ajax.min.js"></script>*@
<script src="~/Scripts/jquery/AdditionValidation.js"></script>


<script>
    const dropContainer = document.getElementById("dropcontainer")
    const fileInput = document.getElementById("images")

    dropContainer.addEventListener("dragover", (e) => {
        // prevent default to allow drop
        e.preventDefault()
    }, false)

    dropContainer.addEventListener("dragenter", () => {
        dropContainer.classList.add("drag-active")
    })

    dropContainer.addEventListener("dragleave", () => {
        dropContainer.classList.remove("drag-active")
    })

    dropContainer.addEventListener("drop", (e) => {
        e.preventDefault()
        dropContainer.classList.remove("drag-active")
        fileInput.files = e.dataTransfer.files
    })


    var arrFileList = [];
    //function ChooseFileReference() {
    //    var finder = new CKFinder();
    //    finder.inpopup = true;
    //    finder.defaultlanguage = 'vi';
    //    finder.language = 'vi';
    //    finder.popupfeatures = "width=900,height=900,menubar=yes,toolbar=no,modal=yes";
    //    finder.selectmultiple = true;
    //    finder.startuppath = "Files:/";
    //    finder.baseurl = "/File/";
    //    finder.resourcetype = 'File';
    //    finder.selectActionFunction = function (fileurl, data, allfiles) {
    //        $(allfiles).each(function (index, element) {
    //            var filePath = this.data.fileUrl;
    //            var fileName = filePath.substring(filePath.lastIndexOf("/") + 1, filePath.length);
    //            var fileInfo = {
    //                filePath: filePath,
    //                fileName: fileName
    //            };
    //            var hasExisted = false;
    //            $.each(arrFileList, function (index, element) {
    //                if (element.fileName == fileName) {
    //                    hasExisted = true;
    //                }
    //            });
    //            if (hasExisted) return;
    //            arrFileList.push(filePath);
    //            $("#PathFile").val(arrFileList.join("?"));

    //            var table = $("#tblFileList");
    //            var append = "<li data-id='" + fileName + "'>";
    //            append += `<div class="div1">`;
    //            append += `<a href=` + filePath + ` download='` + fileName + `'>` + fileName + `</a>`;
    //            append += `</div>`;
    //            append += `<div class="div2">`;
    //            append += `<span style="cursor: pointer;" onclick="removeFileAtachment('` + fileName + `')" title="Xóa tài liệu đính kèm"><i class="fa fa-times" aria-hidden="true"></i></span>`;
    //            append += `</div>`;
    //            append += `</li>`;
    //            $(table).prepend(append)

    //        });
    //    };
    //    finder.popup();
    //}

    function removeFileAtachment(fileName) {
        if (confirm("Xóa file đính kèm đã chọn ?")) {

            $("#tblFileList li[data-id='" + fileName + "']").remove();
            $.each(arrFileList, function (i) {
                if (arrFileList[i] == i) {
                    arrFileList.splice(i, 0);
                    $("#PathFile").val(arrFileList.join("?"));
                    return false;
                }
            });
        }
    }




    function SubmitForm() {
        var oke = jQuery('#frmReport').valid();
        if (oke) {
            $("#frmReport").submit();
        }
    }
    $(document).ready(function () {
        $(".select2").select2();
        $(".txt-picker").datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true, yearRange: "-50:+20",
            showWeek: false, weekHeader: "Tuần",
            language: 'vi',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onSelect: function (date) {

            }
        });
    });

    function ccc(rs) {
        if (rs.Status == true) {
            reloadTable();
            NotifySuccess(rs.Message);
            CloseGlobalModal();
        } else {
            NotifyError(rs.Message);
        }
    }
    GenerateCodeFromName('#TenGiaoDien', '#MaGiaoDien');

    function GenerateCodeFromName(selectorName, selectorCode) {
        $(selectorName).on('input', function () {
            let name = $(selectorName).val();
            let codeGen = GenerateCode(name);
            let arrCodeGen = codeGen.split('_');

            let code = FirstChartUppercase(arrCodeGen[0]);
            for (var i = 1; i < arrCodeGen.length; i++) {
                code += FirstChartUppercase(arrCodeGen[i]);
            }

            $(selectorCode).val(code);
        })
    }

    function GenerateCode(str) {
        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
        str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
        str = str.replace(/đ/g, "d");
        str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, "A");
        str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, "E");
        str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, "I");
        str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, "O");
        str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, "U");
        str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, "Y");
        str = str.replace(/Đ/g, "D");
        str = str.trim();
        str = str.replaceAll(' ', '_');
        str = str.replaceAll(',', 'Va');
        return str;
    }
    function FirstChartUppercase(string) {
        return string.charAt(0).toUpperCase() + string.slice(1);
    }

</script>
